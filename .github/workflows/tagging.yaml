name: Increment Tag Version on Push

on:
  push:
    branches:
      - main  # Or specify any branch you want to trigger this action on

permissions:
  contents: write  # Allows the workflow to create and push tags

jobs:
  increment-tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get latest tag
      id: get_latest_tag
      run: |
        # Get the latest tag, or start from v0.0 if no tag exists
        latest_tag=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo "v0.0")
        echo "Latest tag: $latest_tag"
        echo "latest-tag=$latest_tag" >> $GITHUB_ENV

    - name: Increment version number
      id: increment_version
      run: |
        # Extract the numeric part of the version
        version=${{ env.latest-tag }}
        version=${version#v}

        # Split the version number into major.minor
        IFS='.' read -r major minor <<< "$version"
        
        # Increment the minor version
        minor=$((minor+1))

        # Form the new tag
        new_tag="v$major.$minor"
        echo "New tag: $new_tag"
        echo "new-tag=$new_tag" >> $GITHUB_ENV

    - name: Tag the commit
      run: |
        # Configure Git user details for tagging
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

        # Create and push the new tag
        git tag ${{ env.new-tag }}
        git push origin ${{ env.new-tag }}

    - name: Output new tag
      run: echo "Created new tag ${{ env.new-tag }}"



    # - name: Set up Git
    #   run: |
    #     git config user.name "GitHub Actions"
    #     git config user.email "actions@github.com"

    # - name: Set tag version
    #   env:
    #     TAG_VERSION: 'v0.0.1'  # Set your desired tag version here
    #   run: |
    #     echo "Tag version: $TAG_VERSION"
    #     git tag $TAG_VERSION

    # - name: Push tag
    #   env:
    #     TOKEN: ${{ secrets.YOUR_PAT_SECRET_NAME }}  # Use your PAT secret
    #   run: |
    #     git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} $TAG_VERSION

# name: Versioning on Push

# on:
#   push:
#     branches:
#       - main  # Change to your target branch
# permissions:
#   contents: write
# jobs:
#   versioning:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Git
#       run: |
#         git config user.name "GitHub Actions"
#         git config user.email "actions@github.com"

#     - name: Get current version
#       id: get_version
#       run: |
#         # Get the latest tag or start from v0.0.0
#         current_version=$(git describe --tags --abbrev=0 || echo "v0.0.0")
#         echo "Current version is: $current_version"

#         # Extract the version numbers
#         IFS='.' read -r major minor patch <<< "${current_version#v}"  # Remove leading 'v'
        
#         # Increment the patch version
#         new_version="v${major}.${minor}.$((patch + 1))"
#         echo "New version is: $new_version"
#         echo "new_version=$new_version" >> $GITHUB_ENV

#     - name: Create new tag
#       env:
#         TOKEN: ${{ secrets.YOUR_PAT_SECRET_NAME }}  # Use your PAT secret
#       run: |
#         # Generate a unique tag by adding a timestamp
#         unique_tag="${{ env.new_version }}-$(date +'%Y%m%d%H%M%S')"
#         git tag $unique_tag
#         git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} $unique_tag



# name: Versioning on Push

# on:
#   push:
#     branches:
#       - main  # Change to your target branch
# permissions:
#   contents: write
# jobs:
#   versioning:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Git
#       run: |
#         git config user.name "GitHub Actions"
#         git config user.email "actions@github.com"

#     - name: Get current version
#       id: get_version
#       run: |
#         # Get the latest tag or start from v0.0.0
#         current_version=$(git describe --tags --abbrev=0 || echo "v0.0.0")
#         echo "Current version is: $current_version"
#         echo "version=$current_version" >> $GITHUB_ENV

#     - name: Bump version
#       id: bump_version
#       run: |
#         # Bump the version (patch by default)
#         IFS='.' read -r major minor patch <<< "${{ env.version }}"
#         new_version="v${major}.${minor}.$((patch + 1))"
#         echo "New version is: $new_version"
#         echo "new_version=$new_version" >> $GITHUB_ENV

#     - name: Create new tag
#       env:
#         TOKEN: ${{ secrets.TOKEN }}  # Use your PAT stored in GitHub Secretshsjdhjsh
#       run: |
#         git tag ${{ env.new_version }}
#         git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} ${{ env.new_version }}

#     - name: Commit version bump (optional)
#       env:
#         TOKEN: ${{ secrets.TOKEN }}  # Use your PAT stored in GitHub Secrets
#       run: |
#         echo "Version: ${{ env.new_version }}" > VERSION.txt  # Create a VERSION.txt file
#         git add VERSION.txt
#         git commit -m "Update version to ${{ env.new_version }}"
#         git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} main  # Push the changes to the main branch
